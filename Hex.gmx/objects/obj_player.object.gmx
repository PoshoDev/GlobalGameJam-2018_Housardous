<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_witch_blue_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>index = global.spawned++;

switch(index)
{
    case 0:
        face = spr_witch_red_face;
        head = spr_witch_red_head;
        body = spr_witch_red_body;
        
        x = 768;
        y = 432;
    break;
    
    case 1:
        face = spr_witch_blue_face;
        head = spr_witch_blue_head;
        body = spr_witch_blue_body;
        
        x = 1152;
        y = 432;
    break;
    
    case 2:
        face = spr_witch_yellow_face;
        head = spr_witch_yellow_head;
        body = spr_witch_yellow_body;
        
        x = 768;
        y = 816;
    break;
    
    case 3:
        face = spr_witch_green_face;
        head = spr_witch_green_head;
        body = spr_witch_green_body;
        
        x = 1152;
        y = 816;
    break;
}

state = "idle";

hh = sprite_get_height(head)-sprite_get_yoffset(head);

// For animation
frame_count = 0;
rand = random_range(0.5, 1.5); //random_range(0.5, 1.5);
head_x = 0;
head_y = 0;
head_ang = 0;
scale = 2;
head_plus = 0;

ghost = false;
ghost_id = 0;
ghost_frame = 0;

face_current = index;
shrink = 1;

witch_sound(index);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MOVEMENT

frame_count += delta_time/1000000;
idee = index;

switch(state)
{
    case "idle":
        step_y = cos(frame_count * 8);
        step_x =sin(frame_count * 12);
        
        head_x += step_x ;
        head_ang = sin(frame_count*45) * rand * 2;
        
        // Body height
        shrink = cos(frame_count*8)*0.1+0.9;
    break;
    
    
    case "ghost":        
        step_y = cos(frame_count * 8);
        step_x =sin(frame_count * 12);
        
        head_x += step_x * 2;
        
        head_ang = sin(frame_count*45) * rand * 4;
        
        head_plus = irandom_range(-8, 8);
        
        if !(x == dir_x &amp;&amp; y == dir_y)
            move_towards_point(dir_x, dir_y, 1);
        else
        {
            x = dir_x;
            y = dir_y;
            speed = 0;
            state = "idle";
            
            if (++obj_global.current &lt; 4)
                obj_global.alarm[5] = 5;
            else
                obj_global.alarm[6] = room_speed;
            
            face_current = idee;
            ghost = false;
        }
    break;
    
    
    case "walk":
        step_y = cos(frame_count * 8);
        step_x =sin(frame_count * 12);
        
        head_x += step_x ;
        head_ang = sin(frame_count*45) * rand * 2;
        
        // Body height
        shrink = cos(frame_count*8*4)*0.1+0.9;
    
        if !(x == dir_x &amp;&amp; y == dir_y)
            move_towards_point(dir_x, dir_y, 1);
        else
        {
            x = dir_x;
            y = dir_y;
            speed = 0;
            state = "idle";
            
            if (++obj_global.current &lt; 4)
                obj_global.alarm[5] = 5;
            else
                obj_global.alarm[6] = room_speed;
            
            face_current = idee;
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ghost)
{
    draw_sprite_ext(spr_ghost, ghost_id*3+ghost_frame++, x, y, scale, scale, image_angle, image_blend, image_alpha)

    if (ghost_frame &gt; 2)
        ghost_frame = 0;
}
        

draw_sprite_ext(body, 0, x+head_plus, y, scale, scale*shrink, image_angle, image_blend, image_alpha);
draw_sprite_ext(head, 0, x+head_plus-head_x, y-(((hh*shrink)+head_y)*scale), scale, scale, head_ang, image_blend, image_alpha);
draw_sprite_ext(face, face_current, x-head_x, y-(((hh*shrink)+head_y)*scale), scale, scale, head_ang, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
