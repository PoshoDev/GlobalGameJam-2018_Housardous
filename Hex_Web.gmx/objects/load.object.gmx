<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>async_ini = http_get("http://adbgo.xyz/hex/"+string(global.input)+"_data.ini" );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("Data.ini");
    global.mode = ini_read_string("globals", "mode", "error");
    global.players = ini_read_real("globals", "players", -1);
    global.turn = ini_read_real("globals", "turn", 0);
ini_close();

switch(global.client)
{
    case "log":
        if (global.mode == "lobby")
        {
            if (global.players &lt; 4)
            {  
                ini_open("Data.ini")
                    ini_write_real("globals", "players", ++global.players);
                ini_close();
                
                upload();
                
                global.player = global.players;
                
                with instance_create(0, 0, obj_messages)
                    image_index = global.player + 1;
                
                global.client = "wait";
                obj_global.alarm[1] = 15;
            }
            else
            {
                with instance_create(0, 0, obj_messages)
                    image_index = 1;
            }
            
            with (obj_numpad_key)
                    instance_destroy();
                
                with (obj_input)
                    instance_destroy();
        }
        else
            global.input = "ERROR";
    break;
    
    case "wait":
        
        
        if (global.mode == "timer" &amp;&amp; global.myturn == global.turn)
        { 
            //instance_create(room_width/2, room_height*0.75, wut);           
            global.client = "pick";
            global.myturn++;
            instance_create(0, 0, obj_interface);
            //obj_global.alarm[1] = 5;
        }
        else
            obj_global.alarm[1] = 15;
    break;
}
global.roomcode = global.input;
//global.input = global.mode;

with obj_numpad_key instance_destroy()

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

var result, evid;
evid = ds_map_find_value(async_load, "id");

switch (evid) {
    case async_ini:
        result = ds_map_find_value(async_load, "result");
        
        if (typeof(result) == "string")
        {
            file_delete("Data.ini");
            file = file_text_open_write( "Data.ini" );
                file_text_write_string(file, result);
            file_text_close(file);
        }
        

        
        alarm[0] = 10;
        break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
